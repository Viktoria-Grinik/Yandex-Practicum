{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "7ecedc88",
   "metadata": {},
   "source": [
    "# Исследование надежности заемщиков."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a83c84ce",
   "metadata": {},
   "source": [
    "## Шаг 1. Обзор данных"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "74fc79a1",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Импортируем библиотеки Pandas\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "6698bb8c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>days_employed</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>-8437.673028</td>\n",
       "      <td>42</td>\n",
       "      <td>высшее</td>\n",
       "      <td>0</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>253875.639453</td>\n",
       "      <td>покупка жилья</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>-4024.803754</td>\n",
       "      <td>36</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>112080.014102</td>\n",
       "      <td>приобретение автомобиля</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>-5623.422610</td>\n",
       "      <td>33</td>\n",
       "      <td>Среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145885.952297</td>\n",
       "      <td>покупка жилья</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>-4124.747207</td>\n",
       "      <td>32</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>267628.550329</td>\n",
       "      <td>дополнительное образование</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>340266.072047</td>\n",
       "      <td>53</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>158616.077870</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   children  days_employed  dob_years education  education_id  \\\n",
       "0         1   -8437.673028         42    высшее             0   \n",
       "1         1   -4024.803754         36   среднее             1   \n",
       "2         0   -5623.422610         33   Среднее             1   \n",
       "3         3   -4124.747207         32   среднее             1   \n",
       "4         0  340266.072047         53   среднее             1   \n",
       "\n",
       "      family_status  family_status_id gender income_type  debt   total_income  \\\n",
       "0   женат / замужем                 0      F   сотрудник     0  253875.639453   \n",
       "1   женат / замужем                 0      F   сотрудник     0  112080.014102   \n",
       "2   женат / замужем                 0      M   сотрудник     0  145885.952297   \n",
       "3   женат / замужем                 0      M   сотрудник     0  267628.550329   \n",
       "4  гражданский брак                 1      F   пенсионер     0  158616.077870   \n",
       "\n",
       "                      purpose  \n",
       "0               покупка жилья  \n",
       "1     приобретение автомобиля  \n",
       "2               покупка жилья  \n",
       "3  дополнительное образование  \n",
       "4             сыграть свадьбу  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Считываем файл, сохраняем в переменную df, выводим первые 5 строк таблицы\n",
    "df = pd.read_csv(\"/datasets/data.csv\") \n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1ba9e2f2",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 21525 entries, 0 to 21524\n",
      "Data columns (total 12 columns):\n",
      " #   Column            Non-Null Count  Dtype  \n",
      "---  ------            --------------  -----  \n",
      " 0   children          21525 non-null  int64  \n",
      " 1   days_employed     19351 non-null  float64\n",
      " 2   dob_years         21525 non-null  int64  \n",
      " 3   education         21525 non-null  object \n",
      " 4   education_id      21525 non-null  int64  \n",
      " 5   family_status     21525 non-null  object \n",
      " 6   family_status_id  21525 non-null  int64  \n",
      " 7   gender            21525 non-null  object \n",
      " 8   income_type       21525 non-null  object \n",
      " 9   debt              21525 non-null  int64  \n",
      " 10  total_income      19351 non-null  float64\n",
      " 11  purpose           21525 non-null  object \n",
      "dtypes: float64(2), int64(5), object(5)\n",
      "memory usage: 2.0+ MB\n"
     ]
    }
   ],
   "source": [
    "#Узнаем информацию о данных\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5941e345",
   "metadata": {},
   "source": [
    "Вывод:\n",
    "\n",
    "Исходя из предоставленной информации, можно сделать вывод о том, что таблица содержит общие данные клиентов банка, такие как: количество детей, трудовой стаж, возраст, уровень образования, семейное положение, пол. Также, финансовые данные: ежемесячный доход, цель получения кредита и информация о задолженностях.\n",
    "\n",
    "На данном этапе можно выделить такие недостатки, как:\n",
    "- пропуски в данных \n",
    "- дубликаты в данных \n",
    "- некорректные типы данных \n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2816ea7d",
   "metadata": {},
   "source": [
    "## Шаг 2. Предобработка данных\n",
    "### Заполнение пропусков"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "cf211b60",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "children               0\n",
       "days_employed       2174\n",
       "dob_years              0\n",
       "education              0\n",
       "education_id           0\n",
       "family_status          0\n",
       "family_status_id       0\n",
       "gender                 0\n",
       "income_type            0\n",
       "debt                   0\n",
       "total_income        2174\n",
       "purpose                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Подсчитываем пропуски\n",
    "df.isna().sum()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7e25f35f",
   "metadata": {},
   "source": [
    "Судя по результаты, количество пропусков в столбцах 'days_employed'  и 'total_income' одинаково. Проверим в каких строках попадаются пропуски. Следовательно, выясним, появляются ли пропуски в разных строках или они связаны друг с другом."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e3374684",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>days_employed</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>65</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>1</td>\n",
       "      <td>M</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>41</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>госслужащий</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>образование</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>63</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>Не женат / не замужем</td>\n",
       "      <td>4</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>строительство жилой недвижимости</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>50</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>госслужащий</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>сделка с подержанным автомобилем</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>Не женат / не замужем</td>\n",
       "      <td>4</td>\n",
       "      <td>M</td>\n",
       "      <td>компаньон</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>операции с коммерческой недвижимостью</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>52</td>\n",
       "      <td>высшее</td>\n",
       "      <td>0</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>покупка жилья для семьи</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>32</td>\n",
       "      <td>высшее</td>\n",
       "      <td>0</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>госслужащий</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>операции с коммерческой недвижимостью</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>50</td>\n",
       "      <td>высшее</td>\n",
       "      <td>0</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>жилье</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>52</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>жилье</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    children  days_employed  dob_years education  education_id  \\\n",
       "12         0            NaN         65   среднее             1   \n",
       "26         0            NaN         41   среднее             1   \n",
       "29         0            NaN         63   среднее             1   \n",
       "41         0            NaN         50   среднее             1   \n",
       "55         0            NaN         54   среднее             1   \n",
       "65         0            NaN         21   среднее             1   \n",
       "67         0            NaN         52    высшее             0   \n",
       "72         1            NaN         32    высшее             0   \n",
       "82         2            NaN         50    высшее             0   \n",
       "83         0            NaN         52   среднее             1   \n",
       "\n",
       "            family_status  family_status_id gender  income_type  debt  \\\n",
       "12       гражданский брак                 1      M    пенсионер     0   \n",
       "26        женат / замужем                 0      M  госслужащий     0   \n",
       "29  Не женат / не замужем                 4      F    пенсионер     0   \n",
       "41        женат / замужем                 0      F  госслужащий     0   \n",
       "55       гражданский брак                 1      F    пенсионер     1   \n",
       "65  Не женат / не замужем                 4      M    компаньон     0   \n",
       "67        женат / замужем                 0      F    пенсионер     0   \n",
       "72        женат / замужем                 0      M  госслужащий     0   \n",
       "82        женат / замужем                 0      F    сотрудник     0   \n",
       "83        женат / замужем                 0      M    сотрудник     0   \n",
       "\n",
       "    total_income                                purpose  \n",
       "12           NaN                        сыграть свадьбу  \n",
       "26           NaN                            образование  \n",
       "29           NaN       строительство жилой недвижимости  \n",
       "41           NaN       сделка с подержанным автомобилем  \n",
       "55           NaN                        сыграть свадьбу  \n",
       "65           NaN  операции с коммерческой недвижимостью  \n",
       "67           NaN                покупка жилья для семьи  \n",
       "72           NaN  операции с коммерческой недвижимостью  \n",
       "82           NaN                                  жилье  \n",
       "83           NaN                                  жилье  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Количество строк в таблице с пропусками: 2174\n"
     ]
    }
   ],
   "source": [
    "#Выводим строки с пропусками в выбранных столбцах\n",
    "passed = df[df['days_employed'].isna() & df['total_income'].isna()]\n",
    "display(passed.head(10))\n",
    "print('Количество строк в таблице с пропусками:', passed.shape[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ddd86f81",
   "metadata": {},
   "source": [
    "Гипотеза оказалась верна. В двух столбцах, отражающих общий трудовой стаж ('days_employed') и тип занятости ('total_income'), пропуски встречаются и там и там. \n",
    "С чем это может быть связано? Вероятно, проблема в выгрузке данных. Однако проблема встречается и у пенсионеров, и у безработных, и у госслужащих и т. п., следовательно, закономерность пропусков не прослеживается. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b7177f20",
   "metadata": {},
   "source": [
    "Вывод по пропускам:\n",
    "- Удаление всех пропусков было бы нецелесообразным, тк это слишком большое значение строк от их общего количества.\n",
    "- Заполнение пустыми строками нелогично, нам нужно узнать \n",
    "- Заполнение нулевыми значениями в столбце 'days_employed' может быть разумно, так как этот столбец не повлияет на выводы в исследовании. \n",
    "- Заполнить значения в столбце 'total_income' медианными значениями, так как данная информация необходима нам для финального вывода. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "78565e6e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "145017.93753253992"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Выясним медианное значение \n",
    "total_income_median = df['total_income'].median()\n",
    "total_income_median\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c17002a1",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Заполним пропуски в столбце 'total_income' медианным значением\n",
    "df['total_income'] = df['total_income'].fillna(value=total_income_median)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d856308a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Заполним пропуски в столбце 'days_employed' на медианные значения \n",
    "df['days_employed'] = df['days_employed'].median()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "13727315",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "children            0\n",
       "days_employed       0\n",
       "dob_years           0\n",
       "education           0\n",
       "education_id        0\n",
       "family_status       0\n",
       "family_status_id    0\n",
       "gender              0\n",
       "income_type         0\n",
       "debt                0\n",
       "total_income        0\n",
       "purpose             0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Посмотрим как изменилось количество пропусков в данных после заполнения\n",
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c301773e",
   "metadata": {},
   "source": [
    "Таким образом, пропуски были устранены. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aa62a038",
   "metadata": {},
   "source": [
    "### Изменение типов данных."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b232c3c5",
   "metadata": {},
   "source": [
    "Заменим вещественный тип данных в столбце 'days_employed'и 'total_income' на целочисленный"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "088ff963",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 21525 entries, 0 to 21524\n",
      "Data columns (total 12 columns):\n",
      " #   Column            Non-Null Count  Dtype \n",
      "---  ------            --------------  ----- \n",
      " 0   children          21525 non-null  int64 \n",
      " 1   days_employed     21525 non-null  int64 \n",
      " 2   dob_years         21525 non-null  int64 \n",
      " 3   education         21525 non-null  object\n",
      " 4   education_id      21525 non-null  int64 \n",
      " 5   family_status     21525 non-null  object\n",
      " 6   family_status_id  21525 non-null  int64 \n",
      " 7   gender            21525 non-null  object\n",
      " 8   income_type       21525 non-null  object\n",
      " 9   debt              21525 non-null  int64 \n",
      " 10  total_income      21525 non-null  int64 \n",
      " 11  purpose           21525 non-null  object\n",
      "dtypes: int64(7), object(5)\n",
      "memory usage: 2.0+ MB\n"
     ]
    }
   ],
   "source": [
    "df['days_employed'] = df['days_employed'].astype('int')\n",
    "df['total_income'] = df['total_income'].astype('int')\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ad2122fc",
   "metadata": {},
   "source": [
    "Отрицательное количество дней трудового стажа в столбце days_employed является аномалией, так как это не является возможным. Это ошибка, которую нужно обработать. Воспользуемся функцией abs(), которая окажет воздействие только на отрицательные значения столбца, оставив положительные значения неимзменными. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3130ccd6",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['days_employed'] = df['days_employed'].abs()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "9b9446ef",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Строк с отрицательным значением: 0\n"
     ]
    }
   ],
   "source": [
    "#Убедимся, что отрицательных значений не осталось \n",
    "negative_numbers = df[df['days_employed'] < 0].shape[0]\n",
    "print('Строк с отрицательным значением:', negative_numbers )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b1d0deb6",
   "metadata": {},
   "source": [
    "### Изменение столбца 'children'"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b5862467",
   "metadata": {},
   "source": [
    "В столбце с количеством детей встречаются отрицательные значения, что является невозможным. Также можно заметить, что существуют 76 записей, которые содержат информацию о том, что у клиента 20 детей. Предположим, что вместо числа 2, по ошибке было записано число 20. \n",
    "В итоге, уберем отрицательные значения и заменим 20 на 2. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "e0fbd4b8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "children\n",
       "-1        47\n",
       " 0     14149\n",
       " 1      4818\n",
       " 2      2055\n",
       " 3       330\n",
       " 4        41\n",
       " 5         9\n",
       " 20       76\n",
       "Name: children, dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Подсчитаем значения в столбце о детях\n",
    "df.groupby('children')['children'].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "dbf73764",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Уберем отрицательные значения\n",
    "df['children'] = df['children'].abs()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "d84a0603",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Заменим значения 20 на 2\n",
    "df['children'] = df['children'].replace(20,2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "2b83146a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "children\n",
       "0    14149\n",
       "1     4865\n",
       "2     2131\n",
       "3      330\n",
       "4       41\n",
       "5        9\n",
       "Name: children, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Убедимся, что все исправлено \n",
    "df.groupby('children')['children'].count()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "206cf0c9",
   "metadata": {},
   "source": [
    "### Удаление дубликатов."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2da0acda",
   "metadata": {},
   "source": [
    "Для начала избавимся от неявных дубликатов в колонке с образованием клиентов. Можно заметить, что одинаковый уровень образования записан разным регистром в некоторых случаях, исправим это на одинаковый регистр. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "b2e4e13a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['высшее', 'среднее', 'Среднее', 'СРЕДНЕЕ', 'ВЫСШЕЕ',\n",
       "       'неоконченное высшее', 'начальное', 'Высшее',\n",
       "       'НЕОКОНЧЕННОЕ ВЫСШЕЕ', 'Неоконченное высшее', 'НАЧАЛЬНОЕ',\n",
       "       'Начальное', 'Ученая степень', 'УЧЕНАЯ СТЕПЕНЬ', 'ученая степень'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Ознакомимся с уникальными значениями\n",
    "df['education'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "919ac866",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Приведем все значения к нижнему регистру \n",
    "df['education'] = df['education'].str.lower()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "b5a4da73",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['высшее', 'среднее', 'неоконченное высшее', 'начальное',\n",
       "       'ученая степень'], dtype=object)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Убедимся, что все исправно \n",
    "df['education'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e830f2a",
   "metadata": {},
   "source": [
    "Далее перейдем к явным дубликатам. Посчитаем их количество. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "5d0882e1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "71"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.duplicated().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f849e2f4",
   "metadata": {},
   "source": [
    "Ознакомимся с этими строками. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "88e2e312",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>days_employed</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2849</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>41</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145017</td>\n",
       "      <td>покупка жилья для семьи</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3290</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>58</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>145017</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4182</th>\n",
       "      <td>1</td>\n",
       "      <td>1203</td>\n",
       "      <td>34</td>\n",
       "      <td>высшее</td>\n",
       "      <td>0</td>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145017</td>\n",
       "      <td>свадьба</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4851</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>60</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>145017</td>\n",
       "      <td>свадьба</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5557</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>58</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>145017</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20702</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>64</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>145017</td>\n",
       "      <td>дополнительное образование</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21032</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>60</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>145017</td>\n",
       "      <td>заняться образованием</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21132</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>47</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145017</td>\n",
       "      <td>ремонт жилью</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21281</th>\n",
       "      <td>1</td>\n",
       "      <td>1203</td>\n",
       "      <td>30</td>\n",
       "      <td>высшее</td>\n",
       "      <td>0</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145017</td>\n",
       "      <td>покупка коммерческой недвижимости</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21415</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>54</td>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>145017</td>\n",
       "      <td>операции с жильем</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>71 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       children  days_employed  dob_years education  education_id  \\\n",
       "2849          0           1203         41   среднее             1   \n",
       "3290          0           1203         58   среднее             1   \n",
       "4182          1           1203         34    высшее             0   \n",
       "4851          0           1203         60   среднее             1   \n",
       "5557          0           1203         58   среднее             1   \n",
       "...         ...            ...        ...       ...           ...   \n",
       "20702         0           1203         64   среднее             1   \n",
       "21032         0           1203         60   среднее             1   \n",
       "21132         0           1203         47   среднее             1   \n",
       "21281         1           1203         30    высшее             0   \n",
       "21415         0           1203         54   среднее             1   \n",
       "\n",
       "          family_status  family_status_id gender income_type  debt  \\\n",
       "2849    женат / замужем                 0      F   сотрудник     0   \n",
       "3290   гражданский брак                 1      F   пенсионер     0   \n",
       "4182   гражданский брак                 1      F   сотрудник     0   \n",
       "4851   гражданский брак                 1      F   пенсионер     0   \n",
       "5557   гражданский брак                 1      F   пенсионер     0   \n",
       "...                 ...               ...    ...         ...   ...   \n",
       "20702   женат / замужем                 0      F   пенсионер     0   \n",
       "21032   женат / замужем                 0      F   пенсионер     0   \n",
       "21132   женат / замужем                 0      F   сотрудник     0   \n",
       "21281   женат / замужем                 0      F   сотрудник     0   \n",
       "21415   женат / замужем                 0      F   пенсионер     0   \n",
       "\n",
       "       total_income                            purpose  \n",
       "2849         145017            покупка жилья для семьи  \n",
       "3290         145017                    сыграть свадьбу  \n",
       "4182         145017                            свадьба  \n",
       "4851         145017                            свадьба  \n",
       "5557         145017                    сыграть свадьбу  \n",
       "...             ...                                ...  \n",
       "20702        145017         дополнительное образование  \n",
       "21032        145017              заняться образованием  \n",
       "21132        145017                       ремонт жилью  \n",
       "21281        145017  покупка коммерческой недвижимости  \n",
       "21415        145017                  операции с жильем  \n",
       "\n",
       "[71 rows x 12 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df.duplicated()]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3e9c5159",
   "metadata": {},
   "source": [
    "Изучив данные, можно заметить, что во всех этих строках совпадает заработная плата, что может быть ошибкой. Так как по отношению к общему количеству строк, эти строки составляют маленькое значение, их можно удалить.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "4fbdf00b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Удалим данные строки, удаляя старые индексы и формируя новые  \n",
    "df = df.drop_duplicates().reset_index(drop = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "04edd585",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Проверим количество явных дубликатов \n",
    "df.duplicated().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e1ef5fd0",
   "metadata": {},
   "source": [
    "### Шаг 2.5. Формирование дополнительных датафреймов словарей, декомпозиция исходного датафрейма."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "375332d0",
   "metadata": {},
   "source": [
    "Создадим два новых датафрейма со столбцами:\n",
    "education_id и education — в первом;\n",
    "family_status_id и family_status — во втором.\n",
    "\n",
    "Удалим из исходного датафрейма столбцы education и family_status, оставив только их идентификаторы: education_id и family_status_id. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "4302b215",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>education_id</th>\n",
       "      <th>education</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>высшее</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>среднее</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>неоконченное высшее</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>начальное</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>ученая степень</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   education_id            education\n",
       "0             0               высшее\n",
       "1             1              среднее\n",
       "2             2  неоконченное высшее\n",
       "3             3            начальное\n",
       "4             4       ученая степень"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Создадим словарь с пронумерованными уникальными значениями, со столбцами education_id и education\n",
    "education_dict = df[['education_id', 'education']]\n",
    "education_dict = education_dict.drop_duplicates().reset_index(drop=True)\n",
    "education_dict"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "cebc1047",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>family_status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>женат / замужем</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>гражданский брак</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>вдовец / вдова</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>в разводе</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Не женат / не замужем</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   family_status_id          family_status\n",
       "0                 0        женат / замужем\n",
       "1                 1       гражданский брак\n",
       "2                 2         вдовец / вдова\n",
       "3                 3              в разводе\n",
       "4                 4  Не женат / не замужем"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "family_dict = df[['family_status_id','family_status']]\n",
    "family_dict = family_dict.drop_duplicates().reset_index(drop=True)\n",
    "family_dict"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "30e32849",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.drop(['education', 'family_status'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "ca58d27f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>days_employed</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1203</td>\n",
       "      <td>42</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>253875</td>\n",
       "      <td>покупка жилья</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1203</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>112080</td>\n",
       "      <td>приобретение автомобиля</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145885</td>\n",
       "      <td>покупка жилья</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1203</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>267628</td>\n",
       "      <td>дополнительное образование</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>53</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>158616</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>M</td>\n",
       "      <td>компаньон</td>\n",
       "      <td>0</td>\n",
       "      <td>255763</td>\n",
       "      <td>покупка жилья</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>43</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>компаньон</td>\n",
       "      <td>0</td>\n",
       "      <td>240525</td>\n",
       "      <td>операции с жильем</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>50</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>135823</td>\n",
       "      <td>образование</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2</td>\n",
       "      <td>1203</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>95856</td>\n",
       "      <td>на проведение свадьбы</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>41</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>144425</td>\n",
       "      <td>покупка жилья для семьи</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   children  days_employed  dob_years  education_id  family_status_id gender  \\\n",
       "0         1           1203         42             0                 0      F   \n",
       "1         1           1203         36             1                 0      F   \n",
       "2         0           1203         33             1                 0      M   \n",
       "3         3           1203         32             1                 0      M   \n",
       "4         0           1203         53             1                 1      F   \n",
       "5         0           1203         27             0                 1      M   \n",
       "6         0           1203         43             0                 0      F   \n",
       "7         0           1203         50             1                 0      M   \n",
       "8         2           1203         35             0                 1      F   \n",
       "9         0           1203         41             1                 0      M   \n",
       "\n",
       "  income_type  debt  total_income                     purpose  \n",
       "0   сотрудник     0        253875               покупка жилья  \n",
       "1   сотрудник     0        112080     приобретение автомобиля  \n",
       "2   сотрудник     0        145885               покупка жилья  \n",
       "3   сотрудник     0        267628  дополнительное образование  \n",
       "4   пенсионер     0        158616             сыграть свадьбу  \n",
       "5   компаньон     0        255763               покупка жилья  \n",
       "6   компаньон     0        240525           операции с жильем  \n",
       "7   сотрудник     0        135823                 образование  \n",
       "8   сотрудник     0         95856       на проведение свадьбы  \n",
       "9   сотрудник     0        144425     покупка жилья для семьи  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3028956",
   "metadata": {},
   "source": [
    "### Шаг 2.6. Категоризация дохода."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "a07c5efa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>days_employed</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "      <th>total_income_category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1203</td>\n",
       "      <td>42</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>253875</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1203</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>112080</td>\n",
       "      <td>приобретение автомобиля</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145885</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1203</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>267628</td>\n",
       "      <td>дополнительное образование</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>53</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>158616</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>M</td>\n",
       "      <td>компаньон</td>\n",
       "      <td>0</td>\n",
       "      <td>255763</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>43</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>компаньон</td>\n",
       "      <td>0</td>\n",
       "      <td>240525</td>\n",
       "      <td>операции с жильем</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>50</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>135823</td>\n",
       "      <td>образование</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2</td>\n",
       "      <td>1203</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>95856</td>\n",
       "      <td>на проведение свадьбы</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>41</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>144425</td>\n",
       "      <td>покупка жилья для семьи</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   children  days_employed  dob_years  education_id  family_status_id gender  \\\n",
       "0         1           1203         42             0                 0      F   \n",
       "1         1           1203         36             1                 0      F   \n",
       "2         0           1203         33             1                 0      M   \n",
       "3         3           1203         32             1                 0      M   \n",
       "4         0           1203         53             1                 1      F   \n",
       "5         0           1203         27             0                 1      M   \n",
       "6         0           1203         43             0                 0      F   \n",
       "7         0           1203         50             1                 0      M   \n",
       "8         2           1203         35             0                 1      F   \n",
       "9         0           1203         41             1                 0      M   \n",
       "\n",
       "  income_type  debt  total_income                     purpose  \\\n",
       "0   сотрудник     0        253875               покупка жилья   \n",
       "1   сотрудник     0        112080     приобретение автомобиля   \n",
       "2   сотрудник     0        145885               покупка жилья   \n",
       "3   сотрудник     0        267628  дополнительное образование   \n",
       "4   пенсионер     0        158616             сыграть свадьбу   \n",
       "5   компаньон     0        255763               покупка жилья   \n",
       "6   компаньон     0        240525           операции с жильем   \n",
       "7   сотрудник     0        135823                 образование   \n",
       "8   сотрудник     0         95856       на проведение свадьбы   \n",
       "9   сотрудник     0        144425     покупка жилья для семьи   \n",
       "\n",
       "  total_income_category  \n",
       "0                     B  \n",
       "1                     C  \n",
       "2                     C  \n",
       "3                     B  \n",
       "4                     C  \n",
       "5                     B  \n",
       "6                     B  \n",
       "7                     C  \n",
       "8                     C  \n",
       "9                     C  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Создаем функцию для категоризации \n",
    "def total_income_category_func(total_income):\n",
    "    if total_income <= 30000:\n",
    "        return 'E'\n",
    "    if  30001 < total_income < 50000:\n",
    "        return 'D'\n",
    "    if 50001 < total_income < 200000:\n",
    "        return 'C'\n",
    "    if 200001 < total_income < 1000000:\n",
    "        return 'B'\n",
    "    if total_income > 1000001:\n",
    "        return 'A'\n",
    "#Создаем новый столбец в общей таблице, результирующий работу функции \n",
    "df['total_income_category'] = df['total_income'].apply(total_income_category_func)\n",
    "df.head(10)\n",
    "        "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4a881187",
   "metadata": {},
   "source": [
    "### Шаг 2.7. Категоризация целей кредита."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d085acb2",
   "metadata": {},
   "source": [
    "Изучим, какие значения присутствуют в столбце"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "ac3a09b9",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "свадьба                                   791\n",
      "на проведение свадьбы                     768\n",
      "сыграть свадьбу                           765\n",
      "операции с недвижимостью                  675\n",
      "покупка коммерческой недвижимости         661\n",
      "операции с жильем                         652\n",
      "покупка жилья для сдачи                   651\n",
      "операции с коммерческой недвижимостью     650\n",
      "покупка жилья                             646\n",
      "жилье                                     646\n",
      "покупка жилья для семьи                   638\n",
      "строительство собственной недвижимости    635\n",
      "недвижимость                              633\n",
      "операции со своей недвижимостью           627\n",
      "строительство жилой недвижимости          624\n",
      "покупка недвижимости                      621\n",
      "покупка своего жилья                      620\n",
      "строительство недвижимости                619\n",
      "ремонт жилью                              607\n",
      "покупка жилой недвижимости                606\n",
      "на покупку своего автомобиля              505\n",
      "заняться высшим образованием              496\n",
      "автомобиль                                494\n",
      "сделка с подержанным автомобилем          486\n",
      "на покупку подержанного автомобиля        478\n",
      "свой автомобиль                           478\n",
      "автомобили                                478\n",
      "на покупку автомобиля                     471\n",
      "приобретение автомобиля                   461\n",
      "дополнительное образование                460\n",
      "Name: purpose, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(df['purpose'].value_counts().head(30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "f20f724c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "38\n"
     ]
    }
   ],
   "source": [
    "#Посмотрим общее количество \n",
    "print(len(df['purpose'].unique()))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d312661d",
   "metadata": {},
   "source": [
    "Выделим 4 основные категории взятия кредита:\n",
    "1. операции с автомобилем,\n",
    "2. операции с недвижимостью,\n",
    "3. проведение свадьбы,\n",
    "4. получение образования\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0c3a5164",
   "metadata": {},
   "source": [
    "Далее создадим функцию, которая на основании данных из столбца purpose сформирует новый столбец purpose_category, в который войдут описанные выше категории. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "c19703fd",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>days_employed</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "      <th>total_income_category</th>\n",
       "      <th>purpose_category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1203</td>\n",
       "      <td>42</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>253875</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>B</td>\n",
       "      <td>жилье</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1203</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>112080</td>\n",
       "      <td>приобретение автомобиля</td>\n",
       "      <td>C</td>\n",
       "      <td>автомобиль</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145885</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>C</td>\n",
       "      <td>жилье</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1203</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>267628</td>\n",
       "      <td>дополнительное образование</td>\n",
       "      <td>B</td>\n",
       "      <td>образование</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>53</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>158616</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "      <td>C</td>\n",
       "      <td>свадьба</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>M</td>\n",
       "      <td>компаньон</td>\n",
       "      <td>0</td>\n",
       "      <td>255763</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>B</td>\n",
       "      <td>жилье</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>43</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>компаньон</td>\n",
       "      <td>0</td>\n",
       "      <td>240525</td>\n",
       "      <td>операции с жильем</td>\n",
       "      <td>B</td>\n",
       "      <td>жилье</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>50</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>135823</td>\n",
       "      <td>образование</td>\n",
       "      <td>C</td>\n",
       "      <td>образование</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2</td>\n",
       "      <td>1203</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>95856</td>\n",
       "      <td>на проведение свадьбы</td>\n",
       "      <td>C</td>\n",
       "      <td>свадьба</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>41</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>144425</td>\n",
       "      <td>покупка жилья для семьи</td>\n",
       "      <td>C</td>\n",
       "      <td>жилье</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2</td>\n",
       "      <td>1203</td>\n",
       "      <td>36</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>компаньон</td>\n",
       "      <td>0</td>\n",
       "      <td>113943</td>\n",
       "      <td>покупка недвижимости</td>\n",
       "      <td>C</td>\n",
       "      <td>жилье</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>40</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>77069</td>\n",
       "      <td>покупка коммерческой недвижимости</td>\n",
       "      <td>C</td>\n",
       "      <td>жилье</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>65</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>M</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>145017</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "      <td>C</td>\n",
       "      <td>свадьба</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>54</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>130458</td>\n",
       "      <td>приобретение автомобиля</td>\n",
       "      <td>C</td>\n",
       "      <td>автомобиль</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0</td>\n",
       "      <td>1203</td>\n",
       "      <td>56</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>компаньон</td>\n",
       "      <td>1</td>\n",
       "      <td>165127</td>\n",
       "      <td>покупка жилой недвижимости</td>\n",
       "      <td>C</td>\n",
       "      <td>жилье</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    children  days_employed  dob_years  education_id  family_status_id gender  \\\n",
       "0          1           1203         42             0                 0      F   \n",
       "1          1           1203         36             1                 0      F   \n",
       "2          0           1203         33             1                 0      M   \n",
       "3          3           1203         32             1                 0      M   \n",
       "4          0           1203         53             1                 1      F   \n",
       "5          0           1203         27             0                 1      M   \n",
       "6          0           1203         43             0                 0      F   \n",
       "7          0           1203         50             1                 0      M   \n",
       "8          2           1203         35             0                 1      F   \n",
       "9          0           1203         41             1                 0      M   \n",
       "10         2           1203         36             0                 0      M   \n",
       "11         0           1203         40             1                 0      F   \n",
       "12         0           1203         65             1                 1      M   \n",
       "13         0           1203         54             2                 0      F   \n",
       "14         0           1203         56             0                 1      F   \n",
       "\n",
       "   income_type  debt  total_income                            purpose  \\\n",
       "0    сотрудник     0        253875                      покупка жилья   \n",
       "1    сотрудник     0        112080            приобретение автомобиля   \n",
       "2    сотрудник     0        145885                      покупка жилья   \n",
       "3    сотрудник     0        267628         дополнительное образование   \n",
       "4    пенсионер     0        158616                    сыграть свадьбу   \n",
       "5    компаньон     0        255763                      покупка жилья   \n",
       "6    компаньон     0        240525                  операции с жильем   \n",
       "7    сотрудник     0        135823                        образование   \n",
       "8    сотрудник     0         95856              на проведение свадьбы   \n",
       "9    сотрудник     0        144425            покупка жилья для семьи   \n",
       "10   компаньон     0        113943               покупка недвижимости   \n",
       "11   сотрудник     0         77069  покупка коммерческой недвижимости   \n",
       "12   пенсионер     0        145017                    сыграть свадьбу   \n",
       "13   сотрудник     0        130458            приобретение автомобиля   \n",
       "14   компаньон     1        165127         покупка жилой недвижимости   \n",
       "\n",
       "   total_income_category purpose_category  \n",
       "0                      B            жилье  \n",
       "1                      C       автомобиль  \n",
       "2                      C            жилье  \n",
       "3                      B      образование  \n",
       "4                      C          свадьба  \n",
       "5                      B            жилье  \n",
       "6                      B            жилье  \n",
       "7                      C      образование  \n",
       "8                      C          свадьба  \n",
       "9                      C            жилье  \n",
       "10                     C            жилье  \n",
       "11                     C            жилье  \n",
       "12                     C          свадьба  \n",
       "13                     C       автомобиль  \n",
       "14                     C            жилье  "
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from pymystem3 import Mystem \n",
    "\n",
    "m = Mystem()\n",
    "\n",
    "\n",
    "def category_purpose_def(row):\n",
    "    lem_purpose = m.lemmatize(row['purpose'])\n",
    "    if 'автомобиль' in lem_purpose:\n",
    "        return 'автомобиль'\n",
    "    if ('жилье' in lem_purpose) or ('недвижимость' in lem_purpose ) or ('ремонт' in lem_purpose):\n",
    "        return 'жилье'\n",
    "    if 'образование' in lem_purpose:\n",
    "        return 'образование'\n",
    "    if 'свадьба' in lem_purpose:\n",
    "        return 'свадьба'\n",
    "\n",
    "df['purpose_category'] = df.apply(category_purpose_def, axis=1)\n",
    "df.head(15)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3442df29",
   "metadata": {},
   "source": [
    "### Ответы на вопросы."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cf21310f",
   "metadata": {},
   "source": [
    "##### Вопрос 1: Есть ли зависимость между количеством детей и возвратом кредита в срок?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "f40801b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>debt</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>children</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>13028.0</td>\n",
       "      <td>1063.0</td>\n",
       "      <td>7.543822</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4410.0</td>\n",
       "      <td>445.0</td>\n",
       "      <td>9.165808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1926.0</td>\n",
       "      <td>202.0</td>\n",
       "      <td>9.492481</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>303.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>8.181818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>37.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>9.756098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>9.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "debt            0       1   percent\n",
       "children                           \n",
       "0         13028.0  1063.0  7.543822\n",
       "1          4410.0   445.0  9.165808\n",
       "2          1926.0   202.0  9.492481\n",
       "3           303.0    27.0  8.181818\n",
       "4            37.0     4.0  9.756098\n",
       "5             9.0     NaN       NaN"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Получим процент должников в зависимости от количества детей \n",
    "pivot_table_children = df.pivot_table(index='children', columns= 'debt', values='days_employed', aggfunc='count')\n",
    "pivot_table_children['percent'] = pivot_table_children[1]/(pivot_table_children[1] \\\n",
    "                                                                       + pivot_table_children[0]) * 100\n",
    "pivot_table_children"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "24ea3076",
   "metadata": {},
   "source": [
    "Следовательно, клиенты без детей имеют самый маленький процент по задолжностям (7%). В отличие от клиентов с 4 детьми, где процент задолжностей равен почти 10%. У клиентов с 3 и 2 детьми ситуация лучше, чем у клиентов с 4 детьми, однако все равно процент задолжностей больше, чем у клиентов без детей. \n",
    "В итоге, клиенты не имеющие детей имеют меньше задолженностей, чем клиенты с любым количеством детей. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1f5e6f9",
   "metadata": {},
   "source": [
    "##### Вопрос 2: Есть ли зависимость между семейным положением и возвратом кредита в срок?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "65d31b8b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>debt</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>family_status_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>11408</td>\n",
       "      <td>931</td>\n",
       "      <td>7.545182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3763</td>\n",
       "      <td>388</td>\n",
       "      <td>9.347145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>896</td>\n",
       "      <td>63</td>\n",
       "      <td>6.569343</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1110</td>\n",
       "      <td>85</td>\n",
       "      <td>7.112971</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2536</td>\n",
       "      <td>274</td>\n",
       "      <td>9.750890</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "debt                  0    1   percent\n",
       "family_status_id                      \n",
       "0                 11408  931  7.545182\n",
       "1                  3763  388  9.347145\n",
       "2                   896   63  6.569343\n",
       "3                  1110   85  7.112971\n",
       "4                  2536  274  9.750890"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Получим процент должников в зависимости от семейного положения \n",
    "pivot_table_family_status = df.pivot_table(index='family_status_id', columns= 'debt', values='days_employed', aggfunc='count')\n",
    "pivot_table_family_status['percent'] = pivot_table_family_status[1]/(pivot_table_family_status[1] \\\n",
    "                                                                       + pivot_table_family_status[0]) * 100\n",
    "pivot_table_family_status"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f88ede65",
   "metadata": {},
   "source": [
    "Можно сделать вывод, что клиенты, которые не состоят в браке (почти 10%), а также клиенты, состоящие в гражданском браке (9%) чаще всего не выплачивают кредиты в срок. Меньше всего задолжностей у вдовцов/вдов (6%), а также у тех, кто состоит в разводе (7%). У клиентов, состоящих в браке процент должников равен 7%. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "56749f8d",
   "metadata": {},
   "source": [
    "##### Вопрос 3: Есть ли зависимость между уровнем дохода и возвратом кредита в срок?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "d55a7375",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>debt</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_income_category</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>A</th>\n",
       "      <td>23</td>\n",
       "      <td>2</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>B</th>\n",
       "      <td>4684</td>\n",
       "      <td>356</td>\n",
       "      <td>7.063492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C</th>\n",
       "      <td>14656</td>\n",
       "      <td>1360</td>\n",
       "      <td>8.491508</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>D</th>\n",
       "      <td>329</td>\n",
       "      <td>21</td>\n",
       "      <td>6.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E</th>\n",
       "      <td>20</td>\n",
       "      <td>2</td>\n",
       "      <td>9.090909</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "debt                       0     1   percent\n",
       "total_income_category                       \n",
       "A                         23     2  8.000000\n",
       "B                       4684   356  7.063492\n",
       "C                      14656  1360  8.491508\n",
       "D                        329    21  6.000000\n",
       "E                         20     2  9.090909"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Получим процент должников относительно дохода клиентов\n",
    "pivot_table_total_income = df.pivot_table(index='total_income_category', columns= 'debt', values='days_employed', aggfunc='count')\n",
    "pivot_table_total_income['percent'] = pivot_table_total_income[1]/(pivot_table_total_income[1] \\\n",
    "                                                                       + pivot_table_total_income[0]) * 100\n",
    "pivot_table_total_income"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba086fcb",
   "metadata": {},
   "source": [
    "Данные говорят о том, что клиенты категории E, C и А чаще остальных являются должниками. В отличие от категорий B и D, которые чаще платят вовремя. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33b68606",
   "metadata": {},
   "source": [
    "##### Вопрос 4: Как разные цели кредита влияют на его возврат в срок?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "47f12075",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>debt</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>purpose_category</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>автомобиль</th>\n",
       "      <td>3903</td>\n",
       "      <td>403</td>\n",
       "      <td>9.359034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>жилье</th>\n",
       "      <td>10029</td>\n",
       "      <td>782</td>\n",
       "      <td>7.233373</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>образование</th>\n",
       "      <td>3643</td>\n",
       "      <td>370</td>\n",
       "      <td>9.220035</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>свадьба</th>\n",
       "      <td>2138</td>\n",
       "      <td>186</td>\n",
       "      <td>8.003442</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "debt                  0    1   percent\n",
       "purpose_category                      \n",
       "автомобиль         3903  403  9.359034\n",
       "жилье             10029  782  7.233373\n",
       "образование        3643  370  9.220035\n",
       "свадьба            2138  186  8.003442"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Получим процент должников по каждой цели выдачи кредита\n",
    "pivot_table_purpose_category = df.pivot_table(index='purpose_category', columns= 'debt', values='days_employed', aggfunc='count')\n",
    "pivot_table_purpose_category['percent'] = pivot_table_purpose_category[1]/(pivot_table_purpose_category[1] \\\n",
    "                                                                       + pivot_table_purpose_category[0]) * 100\n",
    "pivot_table_purpose_category "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b18603e0",
   "metadata": {},
   "source": [
    "Следовательно, можно сделать вывод, что кредиты по категориям \"автомобиль\" и \"образование\" чаще остальных не выплачиваются в срок, а именно больше, чем 9% клиентов несвоевременно проводили платежи. Меньше всего должников по категории \"жилье\", всего 7%, а также по категории \"свадьба\" - 8% должников."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "56b401e1",
   "metadata": {},
   "source": [
    "## Общий вывод:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "45d1adc3",
   "metadata": {},
   "source": [
    "Исходя из данных, предоставленных выше, можно сделать общий вывод: семейное положение и количество детей действительно влияют на факт погашения кредита в срок. Клиенты, не состоящие в браке или же состоящие в гражданском браке, в совокуности чаще являются должниками, нежели те клиенты, которые состоят или состояли в браке ранее. Также и клиенты, у которых нет детей, реже являются должниками, чем клиенты, у которых дети есть. \n",
    "Также уровень дохода влияет на факт погашения кредита в срок. А именно: клиенты группы \"Е\", \"С\" и \"А\" (перечислены по убыванию по количеству долга) чаще являются должниками, нежели клиенты группы \"В\" и \"D\" - которые чаще платят вовремя. "
   ]
  }
 ],
 "metadata": {
  "ExecuteTimeLog": [
   {
    "duration": 568,
    "start_time": "2022-02-18T15:13:25.551Z"
   },
   {
    "duration": 2,
    "start_time": "2022-02-18T15:13:28.637Z"
   },
   {
    "duration": 62,
    "start_time": "2022-02-18T15:14:31.925Z"
   },
   {
    "duration": 52,
    "start_time": "2022-02-18T15:16:09.342Z"
   },
   {
    "duration": 2,
    "start_time": "2022-02-18T15:16:13.448Z"
   },
   {
    "duration": 53,
    "start_time": "2022-02-18T15:16:14.716Z"
   },
   {
    "duration": 53,
    "start_time": "2022-02-18T15:16:30.709Z"
   },
   {
    "duration": 10,
    "start_time": "2022-02-18T15:18:34.171Z"
   },
   {
    "duration": 2,
    "start_time": "2022-02-18T15:35:54.855Z"
   },
   {
    "duration": 51,
    "start_time": "2022-02-18T15:35:55.234Z"
   },
   {
    "duration": 11,
    "start_time": "2022-02-18T15:35:56.401Z"
   },
   {
    "duration": 8,
    "start_time": "2022-02-18T15:36:33.282Z"
   },
   {
    "duration": 2,
    "start_time": "2022-02-18T15:43:47.796Z"
   },
   {
    "duration": 130,
    "start_time": "2022-02-18T15:47:00.225Z"
   },
   {
    "duration": 15,
    "start_time": "2022-02-18T15:47:19.473Z"
   },
   {
    "duration": 5,
    "start_time": "2022-02-18T16:05:21.973Z"
   },
   {
    "duration": 5,
    "start_time": "2022-02-18T16:05:32.808Z"
   },
   {
    "duration": 4,
    "start_time": "2022-02-18T16:09:59.737Z"
   },
   {
    "duration": 3,
    "start_time": "2022-02-18T16:10:00.631Z"
   },
   {
    "duration": 9,
    "start_time": "2022-02-18T16:11:30.230Z"
   },
   {
    "duration": 2,
    "start_time": "2022-02-20T18:03:42.865Z"
   },
   {
    "duration": 56,
    "start_time": "2022-02-20T18:03:43.361Z"
   },
   {
    "duration": 14,
    "start_time": "2022-02-20T18:03:45.505Z"
   },
   {
    "duration": 10,
    "start_time": "2022-02-20T18:03:50.737Z"
   },
   {
    "duration": 16,
    "start_time": "2022-02-20T18:03:54.054Z"
   },
   {
    "duration": 5,
    "start_time": "2022-02-20T18:04:03.544Z"
   },
   {
    "duration": 4,
    "start_time": "2022-02-20T18:04:04.547Z"
   },
   {
    "duration": 3,
    "start_time": "2022-02-20T18:04:05.120Z"
   },
   {
    "duration": 10,
    "start_time": "2022-02-20T18:04:05.770Z"
   },
   {
    "duration": 617,
    "start_time": "2022-02-26T20:32:08.247Z"
   },
   {
    "duration": 71,
    "start_time": "2022-02-26T20:32:08.865Z"
   },
   {
    "duration": 11,
    "start_time": "2022-02-26T20:32:09.168Z"
   },
   {
    "duration": 10,
    "start_time": "2022-02-26T20:32:10.795Z"
   },
   {
    "duration": 17,
    "start_time": "2022-02-26T20:32:11.874Z"
   },
   {
    "duration": 5,
    "start_time": "2022-02-26T20:32:12.971Z"
   },
   {
    "duration": 4,
    "start_time": "2022-02-26T20:32:13.380Z"
   },
   {
    "duration": 3,
    "start_time": "2022-02-26T20:32:13.947Z"
   },
   {
    "duration": 9,
    "start_time": "2022-02-26T20:32:14.458Z"
   },
   {
    "duration": 14,
    "start_time": "2022-02-26T20:44:34.468Z"
   },
   {
    "duration": 326,
    "start_time": "2022-02-26T20:51:47.593Z"
   },
   {
    "duration": 7,
    "start_time": "2022-02-26T20:52:24.078Z"
   },
   {
    "duration": 7,
    "start_time": "2022-02-26T20:54:54.347Z"
   },
   {
    "duration": 128,
    "start_time": "2022-02-26T20:54:54.871Z"
   },
   {
    "duration": 4,
    "start_time": "2022-02-26T20:55:29.528Z"
   },
   {
    "duration": 12,
    "start_time": "2022-02-26T20:55:30.362Z"
   },
   {
    "duration": 3,
    "start_time": "2022-02-26T20:57:24.733Z"
   },
   {
    "duration": 11,
    "start_time": "2022-02-26T20:57:25.202Z"
   },
   {
    "duration": 5,
    "start_time": "2022-02-26T20:57:25.696Z"
   },
   {
    "duration": 7,
    "start_time": "2022-02-26T21:15:31.174Z"
   },
   {
    "duration": 10,
    "start_time": "2022-02-26T21:16:18.397Z"
   },
   {
    "duration": 11,
    "start_time": "2022-02-26T21:24:37.086Z"
   },
   {
    "duration": 4,
    "start_time": "2022-02-26T21:24:37.559Z"
   },
   {
    "duration": 7,
    "start_time": "2022-02-26T21:24:43.829Z"
   },
   {
    "duration": 11,
    "start_time": "2022-02-26T21:26:59.169Z"
   },
   {
    "duration": 4,
    "start_time": "2022-02-26T21:29:09.572Z"
   },
   {
    "duration": 4,
    "start_time": "2022-02-26T21:31:03.275Z"
   },
   {
    "duration": 270,
    "start_time": "2022-02-26T21:31:04.935Z"
   },
   {
    "duration": 5,
    "start_time": "2022-02-26T21:31:05.432Z"
   },
   {
    "duration": 4,
    "start_time": "2022-02-26T21:31:23.510Z"
   },
   {
    "duration": 5,
    "start_time": "2022-02-26T21:31:26.117Z"
   },
   {
    "duration": 5,
    "start_time": "2022-02-26T21:32:05.163Z"
   },
   {
    "duration": 4,
    "start_time": "2022-02-26T21:34:06.902Z"
   },
   {
    "duration": 6,
    "start_time": "2022-02-26T21:34:07.534Z"
   },
   {
    "duration": 6,
    "start_time": "2022-02-26T21:39:03.840Z"
   },
   {
    "duration": 14,
    "start_time": "2022-02-26T21:40:02.384Z"
   },
   {
    "duration": 8,
    "start_time": "2022-02-26T21:40:32.721Z"
   },
   {
    "duration": 270,
    "start_time": "2022-02-26T21:43:10.302Z"
   },
   {
    "duration": 19,
    "start_time": "2022-02-26T21:43:17.906Z"
   },
   {
    "duration": 33,
    "start_time": "2022-02-26T21:45:04.941Z"
   },
   {
    "duration": 280,
    "start_time": "2022-02-26T21:49:32.322Z"
   },
   {
    "duration": 22,
    "start_time": "2022-02-26T21:50:20.011Z"
   },
   {
    "duration": 17,
    "start_time": "2022-02-26T21:51:43.797Z"
   },
   {
    "duration": 6,
    "start_time": "2022-02-26T22:46:03.005Z"
   },
   {
    "duration": 8,
    "start_time": "2022-02-26T22:46:24.756Z"
   },
   {
    "duration": 6,
    "start_time": "2022-02-26T22:49:51.305Z"
   },
   {
    "duration": 7,
    "start_time": "2022-02-26T22:54:01.942Z"
   },
   {
    "duration": 7982,
    "start_time": "2022-02-26T22:55:17.814Z"
   },
   {
    "duration": 5,
    "start_time": "2022-02-26T22:55:34.006Z"
   },
   {
    "duration": 7,
    "start_time": "2022-02-26T22:58:54.930Z"
   },
   {
    "duration": 5,
    "start_time": "2022-02-26T23:05:32.104Z"
   },
   {
    "duration": 4,
    "start_time": "2022-02-26T23:17:42.900Z"
   },
   {
    "duration": 462,
    "start_time": "2022-02-26T23:20:30.298Z"
   },
   {
    "duration": 498,
    "start_time": "2022-03-01T14:18:03.309Z"
   },
   {
    "duration": 290,
    "start_time": "2022-03-01T14:18:32.719Z"
   },
   {
    "duration": 723,
    "start_time": "2022-03-01T14:18:37.487Z"
   },
   {
    "duration": 89,
    "start_time": "2022-03-01T14:18:38.268Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-01T14:18:39.281Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-01T14:18:43.149Z"
   },
   {
    "duration": 23,
    "start_time": "2022-03-01T14:18:44.462Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-01T14:18:52.761Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-01T14:18:53.284Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-01T14:18:53.876Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-01T14:18:54.822Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-01T14:19:03.150Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-01T14:19:16.365Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-01T14:19:32.943Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-01T14:19:33.792Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-01T14:19:40.629Z"
   },
   {
    "duration": 310,
    "start_time": "2022-03-01T14:21:16.272Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-01T14:21:16.811Z"
   },
   {
    "duration": 282,
    "start_time": "2022-03-01T14:21:23.003Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-01T14:21:26.395Z"
   },
   {
    "duration": 308,
    "start_time": "2022-03-01T14:21:27.103Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-01T14:21:44.183Z"
   },
   {
    "duration": 676,
    "start_time": "2022-03-01T14:22:15.179Z"
   },
   {
    "duration": 87,
    "start_time": "2022-03-01T14:22:15.858Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-01T14:22:16.100Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-01T14:22:19.752Z"
   },
   {
    "duration": 25,
    "start_time": "2022-03-01T14:22:21.260Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-01T14:22:22.951Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-01T14:22:23.832Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-01T14:22:24.478Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-01T14:22:25.109Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-01T14:22:28.709Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-01T14:22:30.244Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-01T14:22:31.467Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-01T14:22:46.127Z"
   },
   {
    "duration": 375,
    "start_time": "2022-03-01T14:22:49.208Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-01T14:23:02.599Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-01T14:23:08.877Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-01T14:23:09.485Z"
   },
   {
    "duration": 705,
    "start_time": "2022-03-02T17:48:23.198Z"
   },
   {
    "duration": 87,
    "start_time": "2022-03-02T17:48:23.906Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-02T17:48:23.996Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-02T17:48:24.014Z"
   },
   {
    "duration": 63,
    "start_time": "2022-03-02T17:48:24.027Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-02T17:48:24.092Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-02T17:48:24.101Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-02T17:48:24.112Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-02T17:48:24.123Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-02T17:48:24.184Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-02T17:48:24.204Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-02T17:48:24.211Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-02T17:48:24.226Z"
   },
   {
    "duration": 42,
    "start_time": "2022-03-02T17:48:24.244Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-02T17:48:24.288Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-02T17:48:24.301Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-02T17:48:24.316Z"
   },
   {
    "duration": 58,
    "start_time": "2022-03-02T17:48:24.328Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-02T17:48:24.389Z"
   },
   {
    "duration": 23,
    "start_time": "2022-03-02T17:48:24.400Z"
   },
   {
    "duration": 75,
    "start_time": "2022-03-02T17:48:24.426Z"
   },
   {
    "duration": 25,
    "start_time": "2022-03-02T17:48:24.503Z"
   },
   {
    "duration": 51,
    "start_time": "2022-03-02T17:48:24.533Z"
   },
   {
    "duration": 76,
    "start_time": "2022-03-02T17:48:24.587Z"
   },
   {
    "duration": 22,
    "start_time": "2022-03-02T17:48:24.643Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-02T17:48:24.648Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-02T17:48:24.650Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-02T17:48:24.651Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-02T17:48:31.644Z"
   },
   {
    "duration": 69,
    "start_time": "2022-03-02T17:48:32.304Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-02T17:48:50.319Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-02T17:48:58.725Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-02T17:59:12.207Z"
   },
   {
    "duration": 74,
    "start_time": "2022-03-02T18:01:41.465Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-02T18:01:57.200Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-02T18:03:32.907Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-02T18:18:50.328Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-02T18:18:57.248Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-02T18:33:16.843Z"
   },
   {
    "duration": 1302,
    "start_time": "2022-03-02T18:33:33.118Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-02T18:34:18.419Z"
   },
   {
    "duration": 1134,
    "start_time": "2022-03-02T18:34:19.705Z"
   },
   {
    "duration": 254,
    "start_time": "2022-03-02T18:42:12.450Z"
   },
   {
    "duration": 273,
    "start_time": "2022-03-02T18:43:05.240Z"
   },
   {
    "duration": 767,
    "start_time": "2022-03-02T18:43:12.853Z"
   },
   {
    "duration": 361,
    "start_time": "2022-03-03T15:19:47.132Z"
   },
   {
    "duration": 764,
    "start_time": "2022-03-03T15:19:56.735Z"
   },
   {
    "duration": 86,
    "start_time": "2022-03-03T15:19:57.502Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-03T15:19:57.591Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-03T15:19:57.690Z"
   },
   {
    "duration": 27,
    "start_time": "2022-03-03T15:19:58.089Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-03T15:19:58.635Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-03T15:19:58.812Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-03T15:19:58.983Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-03T15:19:59.155Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-03T15:19:59.856Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-03T15:20:00.210Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-03T15:20:00.389Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-03T15:20:00.927Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-03T15:20:01.115Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-03T15:20:01.319Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-03T15:20:01.516Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-03T15:20:02.104Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-03T15:20:02.281Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-03T15:20:02.467Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-03T15:20:02.859Z"
   },
   {
    "duration": 43,
    "start_time": "2022-03-03T15:20:03.221Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-03T15:20:03.587Z"
   },
   {
    "duration": 23,
    "start_time": "2022-03-03T15:20:03.774Z"
   },
   {
    "duration": 301,
    "start_time": "2022-03-03T15:20:04.344Z"
   },
   {
    "duration": 15340,
    "start_time": "2022-03-03T15:20:05.497Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-03T15:20:20.814Z"
   },
   {
    "duration": 764,
    "start_time": "2022-03-03T17:22:45.750Z"
   },
   {
    "duration": 90,
    "start_time": "2022-03-03T17:22:46.517Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-03T17:22:47.398Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-03T17:22:48.811Z"
   },
   {
    "duration": 24,
    "start_time": "2022-03-03T17:22:49.799Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-03T17:22:50.994Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-03T17:22:51.403Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-03T17:22:51.850Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-03T17:22:52.399Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-03T17:22:53.960Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-03T17:22:54.769Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-03T17:22:55.167Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-03T17:22:56.458Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-03T17:22:57.063Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-03T17:22:58.695Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-03T17:22:59.227Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-03T17:23:05.753Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-03T17:23:06.443Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-03T17:23:10.459Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-03T17:23:11.290Z"
   },
   {
    "duration": 44,
    "start_time": "2022-03-03T17:23:12.364Z"
   },
   {
    "duration": 27,
    "start_time": "2022-03-03T17:23:13.940Z"
   },
   {
    "duration": 22,
    "start_time": "2022-03-03T17:23:14.401Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-03T17:23:25.070Z"
   },
   {
    "duration": -13,
    "start_time": "2022-03-03T17:23:32.063Z"
   },
   {
    "duration": 32,
    "start_time": "2022-03-03T17:23:34.446Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-03T17:25:05.898Z"
   },
   {
    "duration": 103,
    "start_time": "2022-03-03T17:25:06.164Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-03T17:25:06.452Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-03T17:25:07.116Z"
   },
   {
    "duration": 23,
    "start_time": "2022-03-03T17:25:07.512Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-03T17:25:08.020Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-03T17:25:08.173Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-03T17:25:08.329Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-03T17:25:08.500Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-03T17:25:09.162Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-03T17:25:09.480Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-03T17:25:09.634Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-03T17:25:10.117Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-03T17:25:10.271Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-03T17:25:10.417Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-03T17:25:10.599Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-03T17:25:11.116Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-03T17:25:11.275Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-03T17:25:11.523Z"
   },
   {
    "duration": 23,
    "start_time": "2022-03-03T17:25:11.953Z"
   },
   {
    "duration": 44,
    "start_time": "2022-03-03T17:25:12.340Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-03T17:25:12.734Z"
   },
   {
    "duration": 25,
    "start_time": "2022-03-03T17:25:12.966Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-03T17:25:17.030Z"
   },
   {
    "duration": 36,
    "start_time": "2022-03-03T17:25:18.008Z"
   },
   {
    "duration": 562,
    "start_time": "2022-03-05T18:14:23.661Z"
   },
   {
    "duration": 71,
    "start_time": "2022-03-05T18:14:24.225Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-05T18:14:24.300Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-05T18:14:25.041Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-05T18:14:25.524Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-05T18:14:26.293Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-05T18:14:26.533Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-05T18:14:26.785Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-05T18:14:27.062Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-05T18:14:28.238Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-05T18:14:28.744Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-05T18:14:29.017Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-05T18:14:30.940Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-05T18:14:31.479Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-05T18:14:32.018Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-05T18:14:32.429Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-05T18:14:34.025Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-05T18:14:34.213Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-05T18:14:34.618Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-05T18:14:35.557Z"
   },
   {
    "duration": 25,
    "start_time": "2022-03-05T18:14:36.728Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-05T18:14:38.160Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-05T18:14:38.662Z"
   },
   {
    "duration": 2,
    "start_time": "2022-03-05T18:14:40.481Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-05T18:14:46.969Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-05T18:14:54.243Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-05T18:14:58.204Z"
   },
   {
    "duration": 340,
    "start_time": "2022-03-05T18:17:45.719Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-05T18:17:56.850Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-05T18:18:08.621Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-05T18:22:40.617Z"
   },
   {
    "duration": 2,
    "start_time": "2022-03-05T18:25:20.200Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-05T18:38:08.001Z"
   },
   {
    "duration": 7660,
    "start_time": "2022-03-05T18:38:21.021Z"
   },
   {
    "duration": 334,
    "start_time": "2022-03-05T18:38:30.607Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-05T18:38:31.152Z"
   },
   {
    "duration": 440,
    "start_time": "2022-03-05T18:40:09.027Z"
   },
   {
    "duration": 322,
    "start_time": "2022-03-05T18:40:44.275Z"
   },
   {
    "duration": 562,
    "start_time": "2022-03-05T18:40:55.056Z"
   },
   {
    "duration": 60,
    "start_time": "2022-03-05T18:40:55.620Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-05T18:40:55.682Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-05T18:40:55.693Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-05T18:40:55.705Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-05T18:40:55.720Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-05T18:40:55.726Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-05T18:40:55.735Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-05T18:40:55.742Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-05T18:40:55.752Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-05T18:40:55.766Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-05T18:40:55.801Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-05T18:40:55.807Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-05T18:40:55.815Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-05T18:40:55.820Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-05T18:40:55.831Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-05T18:40:55.842Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-05T18:40:55.854Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-05T18:40:55.869Z"
   },
   {
    "duration": 23,
    "start_time": "2022-03-05T18:40:55.881Z"
   },
   {
    "duration": 24,
    "start_time": "2022-03-05T18:40:55.906Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-05T18:40:55.932Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-05T18:40:55.947Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-05T18:40:55.961Z"
   },
   {
    "duration": 32,
    "start_time": "2022-03-05T18:40:55.972Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-05T18:40:56.006Z"
   },
   {
    "duration": 22,
    "start_time": "2022-03-05T18:40:56.011Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-05T18:40:56.034Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-05T18:40:56.044Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-05T18:41:00.783Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-05T18:41:02.818Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-05T18:41:22.935Z"
   },
   {
    "duration": 431,
    "start_time": "2022-03-05T18:41:32.239Z"
   },
   {
    "duration": 344,
    "start_time": "2022-03-05T18:41:39.361Z"
   },
   {
    "duration": 523,
    "start_time": "2022-03-05T19:08:23.242Z"
   },
   {
    "duration": 72,
    "start_time": "2022-03-05T19:08:23.767Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-05T19:08:23.841Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-05T19:08:23.854Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-05T19:08:23.864Z"
   },
   {
    "duration": 24,
    "start_time": "2022-03-05T19:08:23.880Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-05T19:08:23.906Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-05T19:08:23.911Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-05T19:08:23.918Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-05T19:08:23.928Z"
   },
   {
    "duration": 2,
    "start_time": "2022-03-05T19:08:23.941Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-05T19:08:23.945Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-05T19:08:23.955Z"
   },
   {
    "duration": 33,
    "start_time": "2022-03-05T19:08:23.967Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-05T19:08:24.002Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-05T19:08:24.007Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-05T19:08:24.016Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-05T19:08:24.025Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-05T19:08:24.044Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-05T19:08:24.056Z"
   },
   {
    "duration": 32,
    "start_time": "2022-03-05T19:08:24.077Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-05T19:08:24.111Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-05T19:08:24.128Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-05T19:08:24.142Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-05T19:08:24.153Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-05T19:08:24.166Z"
   },
   {
    "duration": 44,
    "start_time": "2022-03-05T19:08:24.172Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-05T19:08:24.218Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-05T19:08:24.226Z"
   },
   {
    "duration": 342,
    "start_time": "2022-03-05T19:08:29.500Z"
   },
   {
    "duration": 572,
    "start_time": "2022-03-05T19:08:54.015Z"
   },
   {
    "duration": 77,
    "start_time": "2022-03-05T19:08:54.589Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-05T19:08:54.667Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-05T19:08:54.678Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-05T19:08:54.688Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-05T19:08:54.707Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-05T19:08:54.712Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-05T19:08:54.718Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-05T19:08:54.722Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-05T19:08:54.735Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-05T19:08:54.749Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-05T19:08:54.754Z"
   },
   {
    "duration": 37,
    "start_time": "2022-03-05T19:08:54.765Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-05T19:08:54.803Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-05T19:08:54.808Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-05T19:08:54.814Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-05T19:08:54.825Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-05T19:08:54.835Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-05T19:08:54.850Z"
   },
   {
    "duration": 23,
    "start_time": "2022-03-05T19:08:54.870Z"
   },
   {
    "duration": 25,
    "start_time": "2022-03-05T19:08:54.894Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-05T19:08:54.921Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-05T19:08:54.938Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-05T19:08:54.952Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-05T19:08:54.962Z"
   },
   {
    "duration": 2,
    "start_time": "2022-03-05T19:08:55.001Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-05T19:08:55.004Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-05T19:08:55.025Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-05T19:08:55.033Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-05T19:09:02.191Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-05T19:09:03.242Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-05T19:13:43.972Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-05T19:14:04.809Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-05T19:14:16.454Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-05T19:34:06.494Z"
   },
   {
    "duration": 114,
    "start_time": "2022-03-05T19:36:57.297Z"
   },
   {
    "duration": 104,
    "start_time": "2022-03-05T19:39:09.619Z"
   },
   {
    "duration": 98,
    "start_time": "2022-03-05T19:39:28.004Z"
   },
   {
    "duration": 103,
    "start_time": "2022-03-05T19:45:37.513Z"
   },
   {
    "duration": 549,
    "start_time": "2022-03-06T16:24:58.152Z"
   },
   {
    "duration": 73,
    "start_time": "2022-03-06T16:24:58.703Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-06T16:24:58.778Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-06T16:24:58.790Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-06T16:24:58.801Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-06T16:24:58.818Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-06T16:24:58.824Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-06T16:24:58.829Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-06T16:24:58.835Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-06T16:24:58.848Z"
   },
   {
    "duration": 37,
    "start_time": "2022-03-06T16:24:58.866Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-06T16:24:58.904Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-06T16:24:58.912Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-06T16:24:58.919Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-06T16:24:58.924Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-06T16:24:58.932Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-06T16:24:58.945Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-06T16:24:58.954Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-06T16:24:58.968Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-06T16:24:59.001Z"
   },
   {
    "duration": 25,
    "start_time": "2022-03-06T16:24:59.019Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-06T16:24:59.046Z"
   },
   {
    "duration": 39,
    "start_time": "2022-03-06T16:24:59.066Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-06T16:24:59.107Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-06T16:24:59.118Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-06T16:24:59.129Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-06T16:24:59.134Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-06T16:24:59.149Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-06T16:24:59.170Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-06T16:24:59.201Z"
   },
   {
    "duration": 102,
    "start_time": "2022-03-06T16:24:59.209Z"
   },
   {
    "duration": 105,
    "start_time": "2022-03-06T16:25:02.349Z"
   },
   {
    "duration": 110,
    "start_time": "2022-03-06T16:26:07.847Z"
   },
   {
    "duration": 340,
    "start_time": "2022-03-06T16:26:36.328Z"
   },
   {
    "duration": 346,
    "start_time": "2022-03-06T16:30:31.340Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-06T16:36:07.156Z"
   },
   {
    "duration": 1899,
    "start_time": "2022-03-06T16:38:17.877Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-06T16:39:01.069Z"
   },
   {
    "duration": 1450,
    "start_time": "2022-03-06T16:39:01.894Z"
   },
   {
    "duration": 1424,
    "start_time": "2022-03-06T16:42:16.719Z"
   },
   {
    "duration": 577,
    "start_time": "2022-03-06T16:48:26.509Z"
   },
   {
    "duration": 74,
    "start_time": "2022-03-06T16:48:27.088Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-06T16:48:27.164Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-06T16:48:27.176Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-06T16:48:27.185Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-06T16:48:27.204Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-06T16:48:27.210Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-06T16:48:27.215Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-06T16:48:27.223Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-06T16:48:27.233Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-06T16:48:27.248Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-06T16:48:27.252Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-06T16:48:27.262Z"
   },
   {
    "duration": 29,
    "start_time": "2022-03-06T16:48:27.274Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-06T16:48:27.305Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-06T16:48:27.309Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-06T16:48:27.321Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-06T16:48:27.333Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-06T16:48:27.349Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-06T16:48:27.361Z"
   },
   {
    "duration": 33,
    "start_time": "2022-03-06T16:48:27.381Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-06T16:48:27.415Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-06T16:48:27.432Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-06T16:48:27.447Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-06T16:48:27.461Z"
   },
   {
    "duration": 34,
    "start_time": "2022-03-06T16:48:27.471Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-06T16:48:27.508Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-06T16:48:27.522Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-06T16:48:27.543Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-06T16:48:27.551Z"
   },
   {
    "duration": 1427,
    "start_time": "2022-03-06T16:48:27.564Z"
   },
   {
    "duration": 290,
    "start_time": "2022-03-06T16:50:55.728Z"
   },
   {
    "duration": 4075,
    "start_time": "2022-03-06T16:51:05.914Z"
   },
   {
    "duration": 303,
    "start_time": "2022-03-06T17:00:32.161Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-06T17:10:29.849Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-06T17:11:09.974Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-06T17:19:52.399Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-06T17:27:17.900Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-06T17:27:46.760Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-06T17:31:41.689Z"
   },
   {
    "duration": 4297,
    "start_time": "2022-03-06T17:32:28.886Z"
   },
   {
    "duration": 30,
    "start_time": "2022-03-06T17:34:26.948Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-06T17:34:50.179Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-06T17:35:10.530Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-06T17:35:47.535Z"
   },
   {
    "duration": 34,
    "start_time": "2022-03-06T17:44:36.406Z"
   },
   {
    "duration": 7969,
    "start_time": "2022-03-06T17:53:56.225Z"
   },
   {
    "duration": 1219,
    "start_time": "2022-03-06T17:54:50.360Z"
   },
   {
    "duration": 7659,
    "start_time": "2022-03-06T17:56:25.487Z"
   },
   {
    "duration": 7454,
    "start_time": "2022-03-06T17:56:54.594Z"
   },
   {
    "duration": 7380,
    "start_time": "2022-03-06T17:59:13.110Z"
   },
   {
    "duration": 624,
    "start_time": "2022-03-10T07:55:59.154Z"
   },
   {
    "duration": 75,
    "start_time": "2022-03-10T07:55:59.779Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-10T07:55:59.856Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-10T07:55:59.868Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-10T07:55:59.884Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-10T07:55:59.902Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-10T07:55:59.909Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-10T07:55:59.917Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-10T07:55:59.926Z"
   },
   {
    "duration": 37,
    "start_time": "2022-03-10T07:55:59.947Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-10T07:55:59.986Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-10T07:55:59.991Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-10T07:56:00.004Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-10T07:56:00.017Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-10T07:56:00.027Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-10T07:56:00.039Z"
   },
   {
    "duration": 24,
    "start_time": "2022-03-10T07:56:00.054Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-10T07:56:00.080Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-10T07:56:00.093Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-10T07:56:00.108Z"
   },
   {
    "duration": 50,
    "start_time": "2022-03-10T07:56:00.128Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-10T07:56:00.180Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-10T07:56:00.204Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-10T07:56:00.223Z"
   },
   {
    "duration": 42,
    "start_time": "2022-03-10T07:56:00.236Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-10T07:56:00.280Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-10T07:56:00.286Z"
   },
   {
    "duration": 23,
    "start_time": "2022-03-10T07:56:00.307Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-10T07:56:00.332Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-10T07:56:00.344Z"
   },
   {
    "duration": 4250,
    "start_time": "2022-03-10T07:56:00.361Z"
   },
   {
    "duration": 27,
    "start_time": "2022-03-10T07:56:04.613Z"
   },
   {
    "duration": 7444,
    "start_time": "2022-03-10T07:56:04.641Z"
   },
   {
    "duration": -18,
    "start_time": "2022-03-10T07:56:12.105Z"
   },
   {
    "duration": -19,
    "start_time": "2022-03-10T07:56:12.107Z"
   },
   {
    "duration": -20,
    "start_time": "2022-03-10T07:56:12.109Z"
   },
   {
    "duration": -21,
    "start_time": "2022-03-10T07:56:12.111Z"
   },
   {
    "duration": -21,
    "start_time": "2022-03-10T07:56:12.112Z"
   },
   {
    "duration": -22,
    "start_time": "2022-03-10T07:56:12.114Z"
   },
   {
    "duration": 21,
    "start_time": "2022-03-10T07:56:21.865Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-10T08:02:27.549Z"
   },
   {
    "duration": 522,
    "start_time": "2022-03-19T07:53:10.942Z"
   },
   {
    "duration": 104,
    "start_time": "2022-03-19T07:53:11.468Z"
   },
   {
    "duration": 28,
    "start_time": "2022-03-19T07:53:11.574Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-19T07:53:11.607Z"
   },
   {
    "duration": 61,
    "start_time": "2022-03-19T07:53:11.624Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-19T07:53:11.688Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-19T07:53:11.700Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-19T07:53:11.718Z"
   },
   {
    "duration": 28,
    "start_time": "2022-03-19T07:53:11.737Z"
   },
   {
    "duration": 38,
    "start_time": "2022-03-19T07:53:11.770Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-19T07:53:11.811Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-19T07:53:11.820Z"
   },
   {
    "duration": 46,
    "start_time": "2022-03-19T07:53:11.841Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-19T07:53:11.889Z"
   },
   {
    "duration": 54,
    "start_time": "2022-03-19T07:53:11.896Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-19T07:53:11.953Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-19T07:53:11.967Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-19T07:53:11.979Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-19T07:53:11.997Z"
   },
   {
    "duration": 25,
    "start_time": "2022-03-19T07:53:12.011Z"
   },
   {
    "duration": 71,
    "start_time": "2022-03-19T07:53:12.039Z"
   },
   {
    "duration": 27,
    "start_time": "2022-03-19T07:53:12.113Z"
   },
   {
    "duration": 45,
    "start_time": "2022-03-19T07:53:12.142Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-19T07:53:12.189Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-19T07:53:12.207Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-19T07:53:12.225Z"
   },
   {
    "duration": 52,
    "start_time": "2022-03-19T07:53:12.236Z"
   },
   {
    "duration": 36,
    "start_time": "2022-03-19T07:53:12.294Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-19T07:53:12.332Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-19T07:53:12.343Z"
   },
   {
    "duration": 6429,
    "start_time": "2022-03-19T07:53:12.356Z"
   },
   {
    "duration": 32,
    "start_time": "2022-03-19T07:53:18.788Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-19T07:53:18.822Z"
   },
   {
    "duration": 80,
    "start_time": "2022-03-19T07:53:18.850Z"
   },
   {
    "duration": 28,
    "start_time": "2022-03-19T07:53:18.932Z"
   },
   {
    "duration": 44,
    "start_time": "2022-03-19T08:04:45.379Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-19T08:09:36.641Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-19T08:10:01.497Z"
   },
   {
    "duration": 198,
    "start_time": "2022-03-27T13:50:20.624Z"
   },
   {
    "duration": 199,
    "start_time": "2022-03-27T13:50:24.320Z"
   },
   {
    "duration": 62,
    "start_time": "2022-03-27T13:52:08.938Z"
   },
   {
    "duration": 479,
    "start_time": "2022-03-27T13:52:16.264Z"
   },
   {
    "duration": 99,
    "start_time": "2022-03-27T13:52:16.745Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-27T13:52:16.846Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-27T13:52:17.205Z"
   },
   {
    "duration": 24,
    "start_time": "2022-03-27T13:52:19.102Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-27T13:52:20.577Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-27T13:52:43.559Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-27T13:52:46.534Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-27T13:52:52.817Z"
   },
   {
    "duration": 24,
    "start_time": "2022-03-27T13:52:55.258Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-27T13:52:59.575Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-27T13:52:59.852Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-27T13:53:05.126Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-27T13:53:05.534Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-27T13:53:05.934Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-27T13:53:06.342Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-27T13:53:10.941Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-27T13:53:11.421Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-27T13:53:12.342Z"
   },
   {
    "duration": 25,
    "start_time": "2022-03-27T13:53:15.367Z"
   },
   {
    "duration": 45,
    "start_time": "2022-03-27T13:53:16.351Z"
   },
   {
    "duration": 27,
    "start_time": "2022-03-27T13:53:19.585Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-27T13:53:19.938Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-27T13:53:22.391Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-27T13:53:27.183Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-27T13:53:27.658Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-27T13:53:28.092Z"
   },
   {
    "duration": 28,
    "start_time": "2022-03-27T13:53:31.753Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-27T13:53:37.315Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-27T13:53:40.542Z"
   },
   {
    "duration": 5813,
    "start_time": "2022-03-27T13:53:42.340Z"
   },
   {
    "duration": 43,
    "start_time": "2022-03-27T13:53:49.792Z"
   },
   {
    "duration": 25,
    "start_time": "2022-03-27T13:54:00.749Z"
   },
   {
    "duration": 45,
    "start_time": "2022-03-27T13:54:15.506Z"
   },
   {
    "duration": 427,
    "start_time": "2022-03-27T16:35:59.992Z"
   },
   {
    "duration": 79,
    "start_time": "2022-03-27T16:36:00.421Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-27T16:36:00.501Z"
   },
   {
    "duration": 139,
    "start_time": "2022-03-27T16:36:00.518Z"
   },
   {
    "duration": 31,
    "start_time": "2022-03-27T16:36:00.659Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-27T16:36:00.692Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-27T16:36:00.714Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-27T16:36:00.742Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-27T16:36:00.753Z"
   },
   {
    "duration": 29,
    "start_time": "2022-03-27T16:36:00.770Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-27T16:36:00.801Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-27T16:36:00.807Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-27T16:36:00.819Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-27T16:36:00.827Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-27T16:36:00.836Z"
   },
   {
    "duration": 27,
    "start_time": "2022-03-27T16:36:00.847Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-27T16:36:00.876Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-27T16:36:00.887Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-27T16:36:00.904Z"
   },
   {
    "duration": 33,
    "start_time": "2022-03-27T16:36:00.923Z"
   },
   {
    "duration": 27,
    "start_time": "2022-03-27T16:36:00.957Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-27T16:36:00.985Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-27T16:36:01.004Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-27T16:36:01.022Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-27T16:36:01.035Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-27T16:36:01.047Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-27T16:36:01.054Z"
   },
   {
    "duration": 43,
    "start_time": "2022-03-27T16:36:01.077Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-27T16:36:01.121Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-27T16:36:01.129Z"
   },
   {
    "duration": 4313,
    "start_time": "2022-03-27T16:36:01.145Z"
   },
   {
    "duration": 21,
    "start_time": "2022-03-27T16:36:05.460Z"
   },
   {
    "duration": 33,
    "start_time": "2022-03-27T16:36:05.483Z"
   },
   {
    "duration": 31,
    "start_time": "2022-03-27T16:36:05.518Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-27T16:36:05.551Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-27T16:36:08.513Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-27T16:41:22.347Z"
   },
   {
    "duration": 72,
    "start_time": "2022-03-27T16:44:08.899Z"
   },
   {
    "duration": 346,
    "start_time": "2022-03-28T13:17:51.291Z"
   },
   {
    "duration": 75,
    "start_time": "2022-03-28T13:17:51.639Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-28T13:17:51.715Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-28T13:17:51.731Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-28T13:17:51.747Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-28T13:17:51.766Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-28T13:17:51.772Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-28T13:17:51.785Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-28T13:17:51.801Z"
   },
   {
    "duration": 33,
    "start_time": "2022-03-28T13:17:51.814Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-28T13:17:51.849Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-28T13:17:51.853Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-28T13:17:51.866Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-28T13:17:51.873Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-28T13:17:51.878Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-28T13:17:51.885Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-28T13:17:51.895Z"
   },
   {
    "duration": 41,
    "start_time": "2022-03-28T13:17:51.903Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-28T13:17:51.945Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-28T13:17:51.956Z"
   },
   {
    "duration": 27,
    "start_time": "2022-03-28T13:17:51.978Z"
   },
   {
    "duration": 43,
    "start_time": "2022-03-28T13:17:52.007Z"
   },
   {
    "duration": 22,
    "start_time": "2022-03-28T13:17:52.052Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-28T13:17:52.076Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-28T13:17:52.091Z"
   },
   {
    "duration": 35,
    "start_time": "2022-03-28T13:17:52.105Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-28T13:17:52.142Z"
   },
   {
    "duration": 21,
    "start_time": "2022-03-28T13:17:52.158Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-28T13:17:52.180Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-28T13:17:52.188Z"
   },
   {
    "duration": 3804,
    "start_time": "2022-03-28T13:17:52.200Z"
   },
   {
    "duration": 37,
    "start_time": "2022-03-28T13:17:56.006Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-28T13:17:56.044Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-28T13:17:56.065Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-28T13:17:56.085Z"
   }
  ],
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "165px"
   },
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
